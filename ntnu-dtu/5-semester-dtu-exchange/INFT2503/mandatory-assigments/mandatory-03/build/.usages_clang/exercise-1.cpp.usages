22 serialization::archive 19 0 0 0 0 104 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03 110 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03\build 0 0 215 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 12 "Circle.hpp" 1 10 1 22 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 8 iostream 2 11 2 19 18446744073709551615 1 > 2 19 2 20 18446744073709551615 5 using 4 1 4 6 18446744073709551615 9 namespace 4 7 4 16 18446744073709551615 3 std 4 17 4 20 0 1 ; 4 20 4 21 18446744073709551615 64 // Prototype for function exercise1 which takes a Circle object. 6 1 6 65 18446744073709551615 4 void 7 1 7 5 18446744073709551615 9 exercise1 7 6 7 15 1 1 ( 7 15 7 16 1 6 Circle 7 16 7 22 2 6 circle 7 23 7 29 3 1 ) 7 29 7 30 1 1 ; 7 30 7 31 18446744073709551615 60 // Struct to hold computed values of area and circumference. 9 1 9 61 18446744073709551615 6 struct 10 1 10 7 18446744073709551615 1 { 10 8 10 9 18446744073709551615 6 double 11 3 11 9 18446744073709551615 4 area 11 10 11 14 4 1 ; 11 14 11 15 18446744073709551615 6 double 12 3 12 9 18446744073709551615 13 circumference 12 10 12 23 5 1 ; 12 23 12 24 18446744073709551615 1 } 13 1 13 2 18446744073709551615 8 computed 13 3 13 11 6 1 , 13 11 13 12 18446744073709551615 6 actual 13 13 13 19 7 1 ; 13 19 13 20 18446744073709551615 74 // Struct to hold boolean flags indicating correctness of computed values. 15 1 15 75 18446744073709551615 6 struct 16 1 16 7 18446744073709551615 1 { 16 8 16 9 18446744073709551615 4 bool 17 3 17 7 18446744073709551615 4 area 17 8 17 12 4 1 ; 17 12 17 13 18446744073709551615 4 bool 18 3 18 7 18446744073709551615 13 circumference 18 8 18 21 5 1 ; 18 21 18 22 18446744073709551615 1 } 19 1 19 2 18446744073709551615 10 is_correct 19 3 19 13 8 1 ; 19 13 19 14 18446744073709551615 3 int 21 1 21 4 18446744073709551615 4 main 21 5 21 9 9 1 ( 21 9 21 10 9 1 ) 21 10 21 11 9 1 { 21 12 21 13 18446744073709551615 6 double 22 3 22 9 18446744073709551615 6 radius 22 10 22 16 10 1 = 22 17 22 18 18446744073709551615 3 5.0 22 19 22 22 18446744073709551615 1 ; 22 22 22 23 18446744073709551615 28 // Set radius of the circle. 22 26 22 54 18446744073709551615 6 Circle 23 3 23 9 2 6 circle 23 10 23 16 11 1 ( 23 16 23 17 2 6 radius 23 17 23 23 10 1 ) 23 23 23 24 2 1 ; 23 24 23 25 18446744073709551615 46 // Create Circle object with specified radius. 23 26 23 72 18446744073709551615 9 exercise1 25 3 25 12 1 1 ( 25 12 25 13 1 6 circle 25 13 25 19 11 1 ) 25 19 25 20 1 1 ; 25 20 25 21 18446744073709551615 41 // Call exercise1 with the Circle object. 25 22 25 63 18446744073709551615 6 return 26 3 26 9 18446744073709551615 1 0 26 10 26 11 18446744073709551615 1 ; 26 11 26 12 18446744073709551615 1 } 27 1 27 2 18446744073709551615 74 // Function to compute and compare the area and circumference of a circle. 29 1 29 75 18446744073709551615 4 void 30 1 30 5 18446744073709551615 9 exercise1 30 6 30 15 1 1 ( 30 15 30 16 1 6 Circle 30 16 30 22 2 6 circle 30 23 30 29 12 1 ) 30 29 30 30 1 1 { 30 31 30 32 18446744073709551615 4 cout 32 3 32 7 13 2 << 32 8 32 10 14 17 "\n\tExercise 1)" 32 11 32 28 18446744073709551615 2 << 32 29 32 31 15 4 endl 32 32 32 36 16 1 ; 32 36 32 37 18446744073709551615 46 // Retrieve the radius from the Circle object. 34 3 34 49 18446744073709551615 6 double 35 3 35 9 18446744073709551615 6 radius 35 10 35 16 17 1 = 35 17 35 18 18446744073709551615 6 circle 35 19 35 25 12 1 . 35 25 35 26 18 10 get_radius 35 26 35 36 18 1 ( 35 36 35 37 18 1 ) 35 37 35 38 18 1 ; 35 38 35 39 18446744073709551615 57 // Compute area and circumference using Circle's methods. 37 3 37 60 18446744073709551615 8 computed 38 3 38 11 6 1 . 38 11 38 12 18446744073709551615 4 area 38 12 38 16 4 1 = 38 17 38 18 18446744073709551615 6 circle 38 19 38 25 12 1 . 38 25 38 26 19 8 get_area 38 26 38 34 19 1 ( 38 34 38 35 19 1 ) 38 35 38 36 19 1 ; 38 36 38 37 18446744073709551615 8 computed 39 3 39 11 6 1 . 39 11 39 12 18446744073709551615 13 circumference 39 12 39 25 5 1 = 39 26 39 27 18446744073709551615 6 circle 39 28 39 34 12 1 . 39 34 39 35 20 17 get_circumference 39 35 39 52 20 1 ( 39 52 39 53 20 1 ) 39 53 39 54 20 1 ; 39 54 39 55 18446744073709551615 58 // Calculate actual area and circumference for comparison. 41 3 41 61 18446744073709551615 6 actual 42 3 42 9 7 1 . 42 9 42 10 18446744073709551615 4 area 42 10 42 14 4 1 = 42 15 42 16 18446744073709551615 2 pi 42 17 42 19 21 1 * 42 20 42 21 18446744073709551615 6 radius 42 22 42 28 17 1 * 42 29 42 30 18446744073709551615 6 radius 42 31 42 37 17 1 ; 42 37 42 38 18446744073709551615 6 actual 43 3 43 9 7 1 . 43 9 43 10 18446744073709551615 13 circumference 43 10 43 23 5 1 = 43 24 43 25 18446744073709551615 3 2.0 43 26 43 29 18446744073709551615 1 * 43 30 43 31 18446744073709551615 2 pi 43 32 43 34 21 1 * 43 35 43 36 18446744073709551615 6 radius 43 37 43 43 17 1 ; 43 43 43 44 18446744073709551615 59 // Check if computed values are equal to the actual values. 45 3 45 62 18446744073709551615 10 is_correct 46 3 46 13 8 1 . 46 13 46 14 18446744073709551615 4 area 46 14 46 18 4 1 = 46 19 46 20 18446744073709551615 1 ( 46 21 46 22 18446744073709551615 8 computed 46 22 46 30 6 1 . 46 30 46 31 18446744073709551615 4 area 46 31 46 35 4 2 == 46 36 46 38 18446744073709551615 6 actual 46 39 46 45 7 1 . 46 45 46 46 18446744073709551615 4 area 46 46 46 50 4 1 ) 46 50 46 51 18446744073709551615 1 ; 46 51 46 52 18446744073709551615 10 is_correct 47 3 47 13 8 1 . 47 13 47 14 18446744073709551615 13 circumference 47 14 47 27 5 1 = 47 28 47 29 18446744073709551615 1 ( 47 30 47 31 18446744073709551615 8 computed 47 31 47 39 6 1 . 47 39 47 40 18446744073709551615 13 circumference 47 40 47 53 5 2 == 47 54 47 56 18446744073709551615 6 actual 47 57 47 63 7 1 . 47 63 47 64 18446744073709551615 13 circumference 47 64 47 77 5 1 ) 47 77 47 78 18446744073709551615 1 ; 47 78 47 79 18446744073709551615 22 // Output the results. 49 3 49 25 18446744073709551615 4 cout 50 3 50 7 13 2 << 50 8 50 10 15 9 boolalpha 50 11 50 20 22 1 ; 50 20 50 21 18446744073709551615 4 cout 51 3 51 7 13 2 << 51 8 51 10 14 20 "Radius of circle: " 51 11 51 31 18446744073709551615 2 << 51 32 51 34 15 6 radius 51 35 51 41 17 2 << 51 42 51 44 15 4 endl 51 45 51 49 16 1 ; 51 49 51 50 18446744073709551615 4 cout 52 3 52 7 13 2 << 52 8 52 10 14 18 "Area of circle: " 52 11 52 29 18446744073709551615 2 << 52 30 52 32 15 8 computed 52 33 52 41 6 1 . 52 41 52 42 18446744073709551615 4 area 52 42 52 46 4 2 << 52 47 52 49 14 17 "\t\t\tCorrect: " 52 50 52 67 18446744073709551615 2 << 52 68 52 70 15 10 is_correct 52 71 52 81 8 1 . 52 81 52 82 18446744073709551615 4 area 52 82 52 86 4 2 << 52 87 52 89 15 4 endl 52 90 52 94 16 1 ; 52 94 52 95 18446744073709551615 4 cout 53 3 53 7 13 2 << 53 8 53 10 14 27 "Circumference of circle: " 53 11 53 38 18446744073709551615 2 << 53 39 53 41 15 8 computed 53 42 53 50 6 1 . 53 50 53 51 18446744073709551615 13 circumference 53 51 53 64 5 2 << 53 65 53 67 14 13 "\tCorrect: " 53 68 53 81 18446744073709551615 2 << 53 82 53 84 15 10 is_correct 53 85 53 95 8 1 . 53 95 53 96 18446744073709551615 13 circumference 53 96 53 109 5 2 << 53 110 53 112 15 4 endl 53 113 53 117 16 1 ; 53 117 53 118 18446744073709551615 1 } 54 1 54 2 18446744073709551615 0 0 23 0 0 0 22 0 0 1 13 0 3 std 8 1 13 0 9 exercise1 4 1 13 0 6 Circle 10 1 13 0 124 7:23:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-1.cpp 6 1 13 0 5 area: 6 1 13 0 14 circumference: 9 1 13 0 8 computed 9 1 13 0 6 actual 9 1 13 0 10 is_correct 8 1 13 0 4 main 9 1 13 0 125 22:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-1.cpp 9 1 13 0 125 23:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-1.cpp 10 1 13 0 125 30:23:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-1.cpp 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 9 1 13 0 125 35:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-1.cpp 21 1 13 0 17 get_radius:Circle 21 1 13 0 15 get_area:Circle 21 1 13 0 24 get_circumference:Circle 9 1 13 0 2 pi 8 1 13 0 13 boolalpha:std 0 0 2 0 0 0 115 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03\Circle.hpp 1699399226 119 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03\exercise-1.cpp 1699398350