22 serialization::archive 19 0 0 0 0 104 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03 110 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03\build 0 0 322 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 8 iostream 1 11 1 19 18446744073709551615 1 > 1 19 1 20 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 6 string 2 11 2 17 18446744073709551615 1 > 2 17 2 18 18446744073709551615 5 using 4 1 4 6 18446744073709551615 9 namespace 4 7 4 16 18446744073709551615 3 std 4 17 4 20 0 1 ; 4 20 4 21 18446744073709551615 174 /**
 * Asks the user to enter three different words through standard input (STDIN),
 * combines these words into a sentence, and performs various string operations on it.
 */ 6 1 9 4 18446744073709551615 3 int 10 1 10 4 18446744073709551615 4 main 10 5 10 9 1 1 ( 10 9 10 10 1 1 ) 10 10 10 11 1 1 { 10 12 10 13 18446744073709551615 4 cout 12 3 12 7 2 2 << 12 8 12 10 3 17 "\n\tExercise 4)" 12 11 12 28 18446744073709551615 2 << 12 29 12 31 4 4 endl 12 32 12 36 5 1 ; 12 36 12 37 18446744073709551615 4 cout 13 3 13 7 2 2 << 13 8 13 10 3 40 "----------------------------------\n\n" 13 11 13 51 18446744073709551615 1 ; 13 51 13 52 18446744073709551615 6 string 15 3 15 9 6 5 word1 15 10 15 15 7 1 , 15 15 15 16 18446744073709551615 5 word2 15 17 15 22 8 1 , 15 22 15 23 18446744073709551615 5 word3 15 24 15 29 9 1 , 15 29 15 30 18446744073709551615 8 sentence 15 31 15 39 10 1 ; 15 39 15 40 18446744073709551615 6 // a). 17 3 17 9 18446744073709551615 4 cout 19 3 19 7 2 2 << 19 8 19 10 3 29 "You will now enter 3 words:" 19 11 19 40 18446744073709551615 2 << 19 41 19 43 4 4 endl 19 44 19 48 5 1 ; 19 48 19 49 18446744073709551615 4 cout 21 3 21 7 2 2 << 21 8 21 10 3 14 "\n\tWord 1: " 21 11 21 25 18446744073709551615 1 ; 21 25 21 26 18446744073709551615 3 cin 22 3 22 6 11 2 >> 22 7 22 9 12 5 word1 22 10 22 15 7 1 ; 22 15 22 16 18446744073709551615 4 cout 24 3 24 7 2 2 << 24 8 24 10 3 12 "\tWord 2: " 24 11 24 23 18446744073709551615 1 ; 24 23 24 24 18446744073709551615 3 cin 25 3 25 6 11 2 >> 25 7 25 9 12 5 word2 25 10 25 15 8 1 ; 25 15 25 16 18446744073709551615 4 cout 27 3 27 7 2 2 << 27 8 27 10 3 12 "\tWord 3: " 27 11 27 23 18446744073709551615 1 ; 27 23 27 24 18446744073709551615 3 cin 28 3 28 6 11 2 >> 28 7 28 9 12 5 word3 28 10 28 15 9 1 ; 28 15 28 16 18446744073709551615 6 // b). 30 3 30 9 18446744073709551615 84 // Concatenates the three words into a sentence with spaces and a period at the end. 32 3 32 87 18446744073709551615 8 sentence 33 3 33 11 10 1 = 33 12 33 13 13 5 word1 33 14 33 19 7 1 + 33 20 33 21 14 3 " " 33 22 33 25 18446744073709551615 1 + 33 26 33 27 14 5 word2 33 28 33 33 8 1 + 33 34 33 35 14 3 " " 33 36 33 39 18446744073709551615 1 + 33 40 33 41 14 5 word3 33 42 33 47 9 1 + 33 48 33 49 14 3 "." 33 50 33 53 18446744073709551615 1 ; 33 53 33 54 18446744073709551615 4 cout 34 3 34 7 2 2 << 34 8 34 10 3 21 "\nThe sentence is: " 34 11 34 32 18446744073709551615 2 << 34 33 34 35 3 8 sentence 34 36 34 44 10 2 << 34 45 34 47 4 4 endl 34 48 34 52 5 1 ; 34 52 34 53 18446744073709551615 6 // c). 36 3 36 9 18446744073709551615 71 // Prints the length of each word and the total length of the sentence. 38 3 38 74 18446744073709551615 4 cout 39 3 39 7 2 2 << 39 8 39 10 3 22 "\nLength of word 1: " 39 11 39 33 18446744073709551615 2 << 39 34 39 36 4 5 word1 39 37 39 42 7 1 . 39 42 39 43 15 6 length 39 43 39 49 15 1 ( 39 49 39 50 15 1 ) 39 50 39 51 15 1 ; 39 51 39 52 18446744073709551615 4 cout 40 3 40 7 2 2 << 40 8 40 10 3 22 "\nLength of word 2: " 40 11 40 33 18446744073709551615 2 << 40 34 40 36 4 5 word2 40 37 40 42 8 1 . 40 42 40 43 15 6 length 40 43 40 49 15 1 ( 40 49 40 50 15 1 ) 40 50 40 51 15 1 ; 40 51 40 52 18446744073709551615 4 cout 41 3 41 7 2 2 << 41 8 41 10 3 22 "\nLength of word 3: " 41 11 41 33 18446744073709551615 2 << 41 34 41 36 4 5 word3 41 37 41 42 9 1 . 41 42 41 43 15 6 length 41 43 41 49 15 1 ( 41 49 41 50 15 1 ) 41 50 41 51 15 1 ; 41 51 41 52 18446744073709551615 4 cout 42 3 42 7 2 2 << 42 8 42 10 3 34 "\nTotal length of the sentence: " 42 11 42 45 18446744073709551615 2 << 42 46 42 48 4 8 sentence 42 49 42 57 10 1 . 42 57 42 58 15 6 length 42 58 42 64 15 1 ( 42 64 42 65 15 1 ) 42 65 42 66 15 1 ; 42 66 42 67 18446744073709551615 6 // d). 44 3 44 9 18446744073709551615 51 // Creates a copy of the sentence for manipulation. 46 3 46 54 18446744073709551615 6 string 47 3 47 9 6 9 sentence2 47 10 47 19 16 1 = 47 20 47 21 18446744073709551615 8 sentence 47 22 47 30 10 1 ; 47 30 47 31 18446744073709551615 6 // e). 49 3 49 9 18446744073709551615 74 // Replaces characters 10 to 12 with 'xxx' if the sentence is long enough. 51 3 51 77 18446744073709551615 2 if 52 3 52 5 18446744073709551615 1 ( 52 6 52 7 18446744073709551615 9 sentence2 52 7 52 16 16 1 . 52 16 52 17 15 6 length 52 17 52 23 15 1 ( 52 23 52 24 15 1 ) 52 24 52 25 15 2 >= 52 26 52 28 18446744073709551615 2 12 52 29 52 31 18446744073709551615 1 ) 52 31 52 32 18446744073709551615 1 { 52 33 52 34 18446744073709551615 9 sentence2 53 5 53 14 16 1 . 53 14 53 15 17 7 replace 53 15 53 22 17 1 ( 53 22 53 23 17 2 10 53 23 53 25 18446744073709551615 1 , 53 25 53 26 17 1 3 53 27 53 28 18446744073709551615 1 , 53 28 53 29 17 5 "xxx" 53 30 53 35 18446744073709551615 1 ) 53 35 53 36 17 1 ; 53 36 53 37 18446744073709551615 1 } 54 3 54 4 18446744073709551615 4 else 54 5 54 9 18446744073709551615 1 { 54 10 54 11 18446744073709551615 9 sentence2 55 5 55 14 16 1 = 55 15 55 16 13 29 "The sentence was too short." 55 17 55 46 18446744073709551615 1 ; 55 46 55 47 18446744073709551615 1 } 56 3 56 4 18446744073709551615 4 cout 58 3 58 7 2 2 << 58 8 58 10 3 30 "\nSentence without changes: " 58 11 58 41 18446744073709551615 2 << 58 42 58 44 3 8 sentence 58 45 58 53 10 2 << 58 54 58 56 4 4 endl 58 57 58 61 5 1 ; 58 61 58 62 18446744073709551615 4 cout 59 3 59 7 2 2 << 59 8 59 10 3 52 "Sentence with 'xxx' in place of characters 10-12: " 59 11 59 63 18446744073709551615 2 << 59 64 59 66 3 9 sentence2 59 67 59 76 16 2 << 59 77 59 79 4 4 endl 59 80 59 84 5 1 ; 59 84 59 85 18446744073709551615 6 // f). 61 3 61 9 18446744073709551615 72 // Retrieves and prints the first 5 characters of the original sentence. 63 3 63 75 18446744073709551615 6 string 64 3 64 9 6 14 sentence_start 64 10 64 24 18 1 = 64 25 64 26 18446744073709551615 29 "The sentence was too short." 64 27 64 56 18446744073709551615 1 ; 64 56 64 57 18446744073709551615 2 if 66 3 66 5 18446744073709551615 1 ( 66 6 66 7 18446744073709551615 8 sentence 66 7 66 15 10 1 . 66 15 66 16 15 6 length 66 16 66 22 15 1 ( 66 22 66 23 15 1 ) 66 23 66 24 15 2 >= 66 25 66 27 18446744073709551615 1 5 66 28 66 29 18446744073709551615 1 ) 66 29 66 30 18446744073709551615 1 { 66 31 66 32 18446744073709551615 14 sentence_start 67 5 67 19 18 1 = 67 20 67 21 13 8 sentence 67 22 67 30 10 1 . 67 30 67 31 19 6 substr 67 31 67 37 19 1 ( 67 37 67 38 19 1 0 67 38 67 39 18446744073709551615 1 , 67 39 67 40 19 1 5 67 41 67 42 18446744073709551615 1 ) 67 42 67 43 19 1 ; 67 43 67 44 18446744073709551615 1 } 68 3 68 4 18446744073709551615 4 cout 70 3 70 7 2 2 << 70 8 70 10 3 42 "The first 5 characters of the sentence: " 70 11 70 53 18446744073709551615 2 << 70 54 70 56 3 14 sentence_start 70 57 70 71 18 2 << 70 72 70 74 4 4 endl 70 75 70 79 5 1 ; 70 79 70 80 18446744073709551615 6 // g). 72 3 72 9 18446744073709551615 62 // Checks if the substring 'hallo' exists within the sentence. 74 3 74 65 18446744073709551615 4 bool 75 3 75 7 18446744073709551615 15 found_substring 75 8 75 23 20 1 = 75 24 75 25 18446744073709551615 1 ( 75 26 75 27 18446744073709551615 8 sentence 75 27 75 35 10 1 . 75 35 75 36 21 4 find 75 36 75 40 21 1 ( 75 40 75 41 21 7 "hallo" 75 41 75 48 18446744073709551615 1 ) 75 48 75 49 21 2 != 75 50 75 52 18446744073709551615 6 string 75 53 75 59 6 2 :: 75 59 75 61 18446744073709551615 4 npos 75 61 75 65 22 1 ) 75 65 75 66 18446744073709551615 1 ; 75 66 75 67 18446744073709551615 4 cout 77 3 77 7 2 2 << 77 8 77 10 4 9 boolalpha 77 11 77 20 23 1 ; 77 20 77 21 18446744073709551615 4 cout 78 3 78 7 2 2 << 78 8 78 10 3 40 "\nDoes 'hallo' exist in the sentence: " 78 11 78 51 18446744073709551615 2 << 78 52 78 54 4 15 found_substring 78 55 78 70 20 2 << 78 71 78 73 4 4 endl 78 74 78 78 5 1 ; 78 78 78 79 18446744073709551615 6 // h). 80 3 80 9 18446744073709551615 64 // Counts the occurrences of the substring 'er' in the sentence. 82 3 82 67 18446744073709551615 3 int 83 3 83 6 18446744073709551615 11 occurrences 83 7 83 18 24 1 = 83 19 83 20 18446744073709551615 1 0 83 21 83 22 18446744073709551615 1 ; 83 22 83 23 18446744073709551615 6 string 84 3 84 9 6 2 :: 84 9 84 11 18446744073709551615 9 size_type 84 11 84 20 25 3 pos 84 21 84 24 26 1 = 84 25 84 26 18446744073709551615 1 0 84 27 84 28 18446744073709551615 1 ; 84 28 84 29 18446744073709551615 6 string 85 3 85 9 6 6 target 85 10 85 16 27 1 = 85 17 85 18 18446744073709551615 4 "er" 85 19 85 23 18446744073709551615 1 ; 85 23 85 24 18446744073709551615 5 while 87 3 87 8 18446744073709551615 1 ( 87 9 87 10 18446744073709551615 1 ( 87 10 87 11 18446744073709551615 3 pos 87 11 87 14 26 1 = 87 15 87 16 18446744073709551615 8 sentence 87 17 87 25 10 1 . 87 25 87 26 21 4 find 87 26 87 30 21 1 ( 87 30 87 31 21 6 target 87 31 87 37 27 1 , 87 37 87 38 21 3 pos 87 39 87 42 26 1 ) 87 42 87 43 21 1 ) 87 43 87 44 18446744073709551615 2 != 87 45 87 47 18446744073709551615 6 string 87 48 87 54 6 2 :: 87 54 87 56 18446744073709551615 4 npos 87 56 87 60 22 1 ) 87 60 87 61 18446744073709551615 1 { 87 62 87 63 18446744073709551615 11 occurrences 88 5 88 16 24 2 ++ 88 16 88 18 18446744073709551615 1 ; 88 18 88 19 18446744073709551615 3 pos 89 5 89 8 26 2 += 89 9 89 11 18446744073709551615 6 target 89 12 89 18 27 1 . 89 18 89 19 15 6 length 89 19 89 25 15 1 ( 89 25 89 26 15 1 ) 89 26 89 27 15 1 ; 89 27 89 28 18446744073709551615 1 } 90 3 90 4 18446744073709551615 4 cout 92 3 92 7 2 2 << 92 8 92 10 3 49 "Number of occurrences of 'er' in the sentence: " 92 11 92 60 18446744073709551615 2 << 92 61 92 63 4 11 occurrences 92 64 92 75 24 2 << 92 76 92 78 4 4 endl 92 79 92 83 5 1 ; 92 83 92 84 18446744073709551615 6 return 94 3 94 9 18446744073709551615 1 0 94 10 94 11 18446744073709551615 1 ; 94 11 94 12 18446744073709551615 1 } 95 1 95 2 18446744073709551615 0 0 28 0 0 0 22 0 0 1 13 0 3 std 8 1 13 0 4 main 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 20 1 13 0 10 string:std 9 1 13 0 125 15:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 9 1 13 0 125 15:17:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 9 1 13 0 125 15:24:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 9 1 13 0 125 15:31:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 9 1 13 0 7 cin:std 8 1 13 0 14 operator>>:std 21 1 13 0 34 operator=:basic_string:__cxx11:std 8 1 13 0 13 operator+:std 21 1 13 0 31 length:basic_string:__cxx11:std 9 1 13 0 125 47:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 21 1 13 0 32 replace:basic_string:__cxx11:std 9 1 13 0 125 64:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 21 1 13 0 31 substr:basic_string:__cxx11:std 9 1 13 0 124 75:8:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 21 1 13 0 29 find:basic_string:__cxx11:std 9 1 13 0 29 npos:basic_string:__cxx11:std 8 1 13 0 13 boolalpha:std 9 1 13 0 124 83:7:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 20 1 13 0 34 size_type:basic_string:__cxx11:std 9 1 13 0 125 84:21:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 9 1 13 0 125 85:10:H:/github/cs-ntnu/ntnu-dtu/5-semester-dtu-exchange/programming-c++bachelor-ntnu/assignments/mandatory-03/exercise-4.cpp 0 0 1 0 0 0 119 H:/github\cs-ntnu\ntnu-dtu\5-semester-dtu-exchange\programming-c++bachelor-ntnu\assignments\mandatory-03\exercise-4.cpp 1699398595